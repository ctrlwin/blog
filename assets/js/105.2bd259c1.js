(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{525:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"组合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合"}},[t._v("#")]),t._v(" 组合")]),t._v(" "),a("h3",{attrs:{id:"parent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parent"}},[t._v("#")]),t._v(" parent")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("类型")]),t._v("："),a("span",{staticStyle:{color:"#d63200"}},[t._v("Vue instance")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("详细")]),t._v("：")]),t._v(" "),a("p",[t._v("指定已创建的实例之父实例，在两者之间建立父子关系。子实例可以用 "),a("code",[t._v("this.$parent")]),t._v(" 访问父实例，子实例被推入父实例的 "),a("code",[t._v("$children")]),t._v(" 数组中。")])]),t._v(" "),a("li",[a("p",[t._v("参考：我的另一篇"),a("a",{attrs:{href:"https://ctrlwin.github.io/blog/pages/24ce64/",target:"_blank",rel:"noopener noreferrer"}},[t._v("组件通信之 $parent 和 $children"),a("OutboundLink")],1)])])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("节制地使用 "),a("code",[t._v("$parent")]),t._v(" 和 "),a("code",[t._v("$children")]),t._v(" - 它们的主要目的是作为访问组件的应急方法。更推荐用 props 和 events 实现父子组件通信")])]),t._v(" "),a("h3",{attrs:{id:"mixins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mixins"}},[t._v("#")]),t._v(" mixins")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("类型")]),t._v("："),a("span",{staticStyle:{color:"#d63200"}},[t._v("Array<Object>")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("详细")]),t._v("：")]),t._v(" "),a("p",[a("code",[t._v("mixins")]),t._v(" 选项接收一个混入对象的数组。这些混入对象可以像正常的实例对象一样包含实例选项，这些选项将会被合并到最终的选项中，使用的是和 "),a("code",[t._v("Vue.extend()")]),t._v(" 一样的选项合并逻辑。也就是说，如果你的混入包含一个 created 钩子，而创建组件本身也有一个，那么两个函数都会被调用。")]),t._v(" "),a("p",[t._v("Mixin 钩子按照传入顺序依次调用，并在调用组件自身的钩子之前被调用。")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("示例")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mixin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("created")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("created")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  mixins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mixin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过将混入对象放入mixins数组中，使其在组件中可以被使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 2")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"extends"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extends"}},[t._v("#")]),t._v(" extends")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("类型")]),t._v("："),a("span",{staticStyle:{color:"#d63200"}},[t._v("Object | Function")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("详细")]),t._v("：")]),t._v(" "),a("p",[t._v("允许声明扩展另一个组件 (可以是一个简单的选项对象或构造函数)，而无需使用 "),a("code",[t._v("Vue.extend")]),t._v("。这主要是为了便于扩展单文件组件。")]),t._v(" "),a("p",[t._v("这和 "),a("code",[t._v("mixins")]),t._v(" 类似。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" CompA "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在没有调用 `Vue.extend` 时候继承 CompA")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" CompB "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CompA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"provide-inject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#provide-inject"}},[t._v("#")]),t._v(" provide / inject")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("类型")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("provide")]),t._v("："),a("span",{staticStyle:{color:"#d63200"}},[t._v("Object | () => Object")])]),t._v(" "),a("li",[a("strong",[t._v("inject")]),t._v("："),a("span",{staticStyle:{color:"#d63200"}},[t._v("Array<string> | { [key: string]: string | Symbol | Object }")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("详细")]),t._v("：")]),t._v(" "),a("p",[t._v("这对选项需要一起使用，以允许一个祖先组件向其所有子孙后代注入一个依赖，不论组件层次有多深，并在其上下游关系成立的时间里始终生效。如果你熟悉 React，这与 React 的上下文特性很相似。")]),t._v(" "),a("p",[a("code",[t._v("provide")]),t._v(" 选项应该是一个对象或返回一个对象的函数。该对象包含可注入其子孙的 property。在该对象中你可以使用 ES2015 Symbols 作为 key，但是只在原生支持 "),a("code",[t._v("Symbol")]),t._v(" 和 "),a("code",[t._v("Reflect.ownKeys")]),t._v(" 的环境下可工作。")]),t._v(" "),a("p",[a("code",[t._v("inject")]),t._v(" 选项应该是：")]),t._v(" "),a("ul",[a("li",[t._v("一个字符串数组，或")]),t._v(" "),a("li",[t._v("一个对象，对象的 key 是本地的绑定名，value 是：\n"),a("ul",[a("li",[t._v("在可用的注入内容中搜索用的 key (字符串或 Symbol)，或")]),t._v(" "),a("li",[t._v("一个对象，该对象的：\n"),a("ul",[a("li",[a("code",[t._v("from")]),t._v(" property 是在可用的注入内容中搜索用的 key (字符串或 Symbol)")]),t._v(" "),a("li",[a("code",[t._v("default")]),t._v(" property 是降级情况下使用的 value")])])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("提示："),a("code",[t._v("provide")]),t._v(" 和 "),a("code",[t._v("inject")]),t._v(" 绑定并不是可响应的。这是刻意为之的。然而，如果你传入了一个可监听的对象，那么其对象的 property 还是可响应的。")])])])]),t._v(" "),a("ul",[a("li",[t._v("参考：我的另一篇"),a("a",{attrs:{href:"https://ctrlwin.github.io/blog/pages/0a5b2b/",target:"_blank",rel:"noopener noreferrer"}},[t._v("组件通信之 provide / inject"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);